/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as DoptApi from "../../api/index";
import * as core from "../../core";
import { ChatStreamChunkStatus } from "./ChatStreamChunkStatus";
import { ChatStreamChunkContent } from "./ChatStreamChunkContent";
import { ChatStreamChunkAnswer } from "./ChatStreamChunkAnswer";

export const ChatStreamChunk: core.serialization.Schema<serializers.ChatStreamChunk.Raw, DoptApi.ChatStreamChunk> =
    core.serialization
        .union("type", {
            status: ChatStreamChunkStatus,
            content: ChatStreamChunkContent,
            answer: ChatStreamChunkAnswer,
        })
        .transform<DoptApi.ChatStreamChunk>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace ChatStreamChunk {
    type Raw = ChatStreamChunk.Status | ChatStreamChunk.Content | ChatStreamChunk.Answer;

    interface Status extends ChatStreamChunkStatus.Raw {
        type: "status";
    }

    interface Content extends ChatStreamChunkContent.Raw {
        type: "content";
    }

    interface Answer extends ChatStreamChunkAnswer.Raw {
        type: "answer";
    }
}
