/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as DoptApi from "../../api";
import * as core from "../../core";

export const ChatStreamChunk: core.serialization.Schema<serializers.ChatStreamChunk.Raw, DoptApi.ChatStreamChunk> =
    core.serialization
        .union("type", {
            status: core.serialization.lazyObject(async () => (await import("..")).ChatStreamChunkStatus),
            content: core.serialization.lazyObject(async () => (await import("..")).ChatStreamChunkContent),
            answer: core.serialization.lazyObject(async () => (await import("..")).ChatStreamChunkAnswer),
        })
        .transform<DoptApi.ChatStreamChunk>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace ChatStreamChunk {
    type Raw = ChatStreamChunk.Status | ChatStreamChunk.Content | ChatStreamChunk.Answer;

    interface Status extends serializers.ChatStreamChunkStatus.Raw {
        type: "status";
    }

    interface Content extends serializers.ChatStreamChunkContent.Raw {
        type: "content";
    }

    interface Answer extends serializers.ChatStreamChunkAnswer.Raw {
        type: "answer";
    }
}
